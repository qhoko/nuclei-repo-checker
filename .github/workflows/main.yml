name: Check for new Nuclei templates

on:
  schedule:
    - cron: '0 5 * * *' # Раз в день в 05:00 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: false # Управляем кэшем вручную

      # --- Кэширование зависимостей Go ---
      - name: Restore Go modules cache
        id: cache-go-restore
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy

      # --- Кэширование файлов состояния (known_templates) ---
      - name: Restore state files cache
        id: cache-state-restore
        uses: actions/cache@v4
        with:
          path: known_templates_*.txt
          # Используем общий префикс для поиска самого свежего кэша
          key: ${{ runner.os }}-state-${{ hashFiles('known_templates_*.txt') }}
          restore-keys: |
            ${{ runner.os }}-state-

      - name: Run checker
        run: go run main.go

      # --- Сохранение кэша файлов состояния ---
      # Этот шаг должен выполняться ПОСЛЕ запуска скрипта, чтобы захватить изменения
      - name: Save state files cache
        id: cache-state-save
        uses: actions/cache@v4
        with:
          path: known_templates_*.txt
          # Ключ генерируется на основе хэша файлов, которые существуют ПОСЛЕ работы скрипта.
          # Этот ключ будет новым, если скрипт изменил или создал файлы.
          key: ${{ runner.os }}-state-${{ hashFiles('known_templates_*.txt') }}
